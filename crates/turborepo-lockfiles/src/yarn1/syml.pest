grammar = { SOI ~ property_statements ~ EOI }

property_statements = { property_statement* }

property_statement = { version_spec | comment_line | samedent_property | legacy_property | legacy_multiple_property }

version_spec = { "# yarn lockfile v1" ~ eol }

comment_line = { WHITESPACE* ~ "#" ~ (!eol ~ ANY)+ ~ eol }

samedent_property = { samedent ~ name ~ WHITESPACE? ~ ":"? ~ WHITESPACE? ~ expression }

legacy_property = { samedent ~ legacy_name ~ WHITESPACE? ~ ":"? ~ WHITESPACE? ~ expression }

legacy_multiple_property = { samedent ~ legacy_name ~ (WHITESPACE? ~ "," ~ WHITESPACE? ~ legacy_name)+ ~ WHITESPACE? ~ ":" ~ WHITESPACE? ~ expression }

expression = { (eol ~ extradent ~ item_statements) | (eol ~ property_statements) | (literal ~ eol) }

item_statements = { item_statement* }

item_statement = { samedent ~ "-" ~ WHITESPACE ~ expression }

name = { string | pseudostring }

legacy_name = { string | legacy_pseudostring+ }

literal = { null | boolean | string | pseudostring }

legacy_literal = { null | string | legacy_pseudostring }

pseudostring = { (!COLON ~ CHAR)+ }

legacy_pseudostring = { "--"? ~ (!COLON ~ LEGACY_CHAR)+ }

string = { "\"" ~ (!"\"" ~ (ESCAPED_CHAR | ANY))+ ~ "\"" }

null = { "null" }

boolean = { "true" | "false" }

eol = { "\n" | "\r\n" }

samedent = @{ WHITESPACE* }

extradent = { WHITESPACE }

COLON = _{ ":" }

WHITESPACE = _{ " " | "\t" }

CHAR = { ASCII_ALPHANUMERIC | "-" | "_" | "/" | "=" | "." | "@" | "#" | "$" | "%" | "&" | "!" | "|" | "*" | "+" | "?" | "^" | "`" | "~" | " " }

LEGACY_CHAR = { ASCII_ALPHANUMERIC | "-" | "_" | "/" | "." | "@" | "^" }

ESCAPED_CHAR = { "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" | "u" ~ HEX_DIGIT ~ HEX_DIGIT ~ HEX_DIGIT ~ HEX_DIGIT) }

HEX_DIGIT = { ASCII_HEX_DIGIT }
